{
  "version": 3,
  "sources": ["../src/extension.js"],
  "sourcesContent": ["const vscode = require('vscode');\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nfunction activate(context) {\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with  registerCommand\n  // The commandId parameter must match the command field in package.json\n  let disposable = vscode.commands.registerCommand('duplicate-and-paste.DuplicateAndPaste', function () {\n    // Display a message box to the user\n    const clipboardContent = vscode.env.clipboard.readText();\n\n    // Split the clipboard content by new lines\n    clipboardContent.then((text) => {\n      const lines = text.split(/\\r?\\n/);\n\n      // Get the active text editor\n      const editor = vscode.window.activeTextEditor;\n      if (editor) {\n        // Detect line endings\n        const document = editor.document;\n        const lineEnding = document.eol === vscode.EndOfLine.CRLF ? '\\r\\n' : '\\n';\n\n        const currentPosition = editor.selection.active;\n        const currentLine = editor.document.lineAt(currentPosition.line);\n        const currentLineText = currentLine.text;\n        const currentColumn = currentPosition.character;\n\n\t\t\t\tconst lineRange = new vscode.Range(\n\t\t\t\t\tcurrentLine.range.start,\n\t\t\t\t\tcurrentLine.range.end\n\t\t\t);\n\n        editor.edit((editBuilder) => {\n          const newLines = lines.reduce((prev, curr) => {\n            return prev + currentLineText.slice(0, currentColumn) + curr + currentLineText.slice(currentColumn) + lineEnding;\n          }, '');\n\t\t\t\t\teditBuilder.replace(lineRange, newLines);\n        });\n      }\n    });\n  });\n\n  context.subscriptions.push(disposable);\n}\n\n// This method is called when your extension is deactivated\nfunction deactivate() {}\n\nmodule.exports = {\n  activate,\n  deactivate,\n};\n"],
  "mappings": ";AAAA,IAAM,SAAS,QAAQ,QAAQ;AAK/B,SAAS,SAAS,SAAS;AAIzB,MAAI,aAAa,OAAO,SAAS,gBAAgB,yCAAyC,WAAY;AAEpG,UAAM,mBAAmB,OAAO,IAAI,UAAU,SAAS;AAGvD,qBAAiB,KAAK,CAAC,SAAS;AAC9B,YAAM,QAAQ,KAAK,MAAM,OAAO;AAGhC,YAAM,SAAS,OAAO,OAAO;AAC7B,UAAI,QAAQ;AAEV,cAAM,WAAW,OAAO;AACxB,cAAM,aAAa,SAAS,QAAQ,OAAO,UAAU,OAAO,SAAS;AAErE,cAAM,kBAAkB,OAAO,UAAU;AACzC,cAAM,cAAc,OAAO,SAAS,OAAO,gBAAgB,IAAI;AAC/D,cAAM,kBAAkB,YAAY;AACpC,cAAM,gBAAgB,gBAAgB;AAE1C,cAAM,YAAY,IAAI,OAAO;AAAA,UAC5B,YAAY,MAAM;AAAA,UAClB,YAAY,MAAM;AAAA,QACpB;AAEK,eAAO,KAAK,CAAC,gBAAgB;AAC3B,gBAAM,WAAW,MAAM,OAAO,CAAC,MAAM,SAAS;AAC5C,mBAAO,OAAO,gBAAgB,MAAM,GAAG,aAAa,IAAI,OAAO,gBAAgB,MAAM,aAAa,IAAI;AAAA,UACxG,GAAG,EAAE;AACV,sBAAY,QAAQ,WAAW,QAAQ;AAAA,QACpC,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAED,UAAQ,cAAc,KAAK,UAAU;AACvC;AAGA,SAAS,aAAa;AAAC;AAEvB,OAAO,UAAU;AAAA,EACf;AAAA,EACA;AACF;",
  "names": []
}
